// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t1.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "t1.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace t1 {

namespace {

const ::google::protobuf::Descriptor* MSG_BASE_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_BASE_reflection_ = NULL;
struct MSG_BASEOneofInstance {
  const ::p1::MSG_TEST* msg_test_;
  const ::p1::MSG_TEST_RES* msg_test_res_;
}* MSG_BASE_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_t1_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_t1_2eproto() {
  protobuf_AddDesc_t1_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "t1.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_BASE_descriptor_ = file->message_type(0);
  static const int MSG_BASE_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MSG_BASE_default_oneof_instance_, msg_test_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(MSG_BASE_default_oneof_instance_, msg_test_res_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_BASE, msg_),
  };
  MSG_BASE_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MSG_BASE_descriptor_,
      MSG_BASE::internal_default_instance(),
      MSG_BASE_offsets_,
      -1,
      -1,
      -1,
      MSG_BASE_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_BASE, _oneof_case_[0]),
      sizeof(MSG_BASE),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_BASE, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_t1_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MSG_BASE_descriptor_, MSG_BASE::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_t1_2eproto() {
  MSG_BASE_default_instance_.Shutdown();
  delete MSG_BASE_default_oneof_instance_;
  delete MSG_BASE_reflection_;
}

void protobuf_InitDefaults_t1_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::p1::protobuf_InitDefaults_p1_2eproto();
  MSG_BASE_default_instance_.DefaultConstruct();
  MSG_BASE_default_oneof_instance_ = new MSG_BASEOneofInstance();
  MSG_BASE_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_t1_2eproto_once_);
void protobuf_InitDefaults_t1_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_t1_2eproto_once_,
                 &protobuf_InitDefaults_t1_2eproto_impl);
}
void protobuf_AddDesc_t1_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_t1_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010t1.proto\022\002t1\032\010p1.proto\"]\n\010MSG_BASE\022 \n\010"
    "msg_test\030\001 \001(\0132\014.p1.MSG_TESTH\000\022(\n\014msg_te"
    "st_res\030\002 \001(\0132\020.p1.MSG_TEST_RESH\000B\005\n\003msgb"
    "\006proto3", 127);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "t1.proto", &protobuf_RegisterTypes);
  ::p1::protobuf_AddDesc_p1_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_t1_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_t1_2eproto_once_);
void protobuf_AddDesc_t1_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_t1_2eproto_once_,
                 &protobuf_AddDesc_t1_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_t1_2eproto {
  StaticDescriptorInitializer_t1_2eproto() {
    protobuf_AddDesc_t1_2eproto();
  }
} static_descriptor_initializer_t1_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MSG_BASE::kMsgTestFieldNumber;
const int MSG_BASE::kMsgTestResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MSG_BASE::MSG_BASE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_t1_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:t1.MSG_BASE)
}

void MSG_BASE::InitAsDefaultInstance() {
  MSG_BASE_default_oneof_instance_->msg_test_ = const_cast< ::p1::MSG_TEST*>(
      ::p1::MSG_TEST::internal_default_instance());
  MSG_BASE_default_oneof_instance_->msg_test_res_ = const_cast< ::p1::MSG_TEST_RES*>(
      ::p1::MSG_TEST_RES::internal_default_instance());
}

MSG_BASE::MSG_BASE(const MSG_BASE& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:t1.MSG_BASE)
}

void MSG_BASE::SharedCtor() {
  clear_has_msg();
  _cached_size_ = 0;
}

MSG_BASE::~MSG_BASE() {
  // @@protoc_insertion_point(destructor:t1.MSG_BASE)
  SharedDtor();
}

void MSG_BASE::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void MSG_BASE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_BASE::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_BASE_descriptor_;
}

const MSG_BASE& MSG_BASE::default_instance() {
  protobuf_InitDefaults_t1_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MSG_BASE> MSG_BASE_default_instance_;

MSG_BASE* MSG_BASE::New(::google::protobuf::Arena* arena) const {
  MSG_BASE* n = new MSG_BASE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MSG_BASE::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:t1.MSG_BASE)
  switch (msg_case()) {
    case kMsgTest: {
      delete msg_.msg_test_;
      break;
    }
    case kMsgTestRes: {
      delete msg_.msg_test_res_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void MSG_BASE::Clear() {
// @@protoc_insertion_point(message_clear_start:t1.MSG_BASE)
  clear_msg();
}

bool MSG_BASE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:t1.MSG_BASE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .p1.MSG_TEST msg_test = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_test()));
        } else {
          goto handle_unusual;
        }
        goto after_msg_test_res;
        break;
      }

      // optional .p1.MSG_TEST_RES msg_test_res = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg_test_res()));
        } else {
          goto handle_unusual;
        }
       after_msg_test_res:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:t1.MSG_BASE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:t1.MSG_BASE)
  return false;
#undef DO_
}

void MSG_BASE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:t1.MSG_BASE)
  // optional .p1.MSG_TEST msg_test = 1;
  if (has_msg_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *msg_.msg_test_, output);
  }

  // optional .p1.MSG_TEST_RES msg_test_res = 2;
  if (has_msg_test_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *msg_.msg_test_res_, output);
  }

  // @@protoc_insertion_point(serialize_end:t1.MSG_BASE)
}

::google::protobuf::uint8* MSG_BASE::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:t1.MSG_BASE)
  // optional .p1.MSG_TEST msg_test = 1;
  if (has_msg_test()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *msg_.msg_test_, false, target);
  }

  // optional .p1.MSG_TEST_RES msg_test_res = 2;
  if (has_msg_test_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *msg_.msg_test_res_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:t1.MSG_BASE)
  return target;
}

size_t MSG_BASE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:t1.MSG_BASE)
  size_t total_size = 0;

  switch (msg_case()) {
    // optional .p1.MSG_TEST msg_test = 1;
    case kMsgTest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.msg_test_);
      break;
    }
    // optional .p1.MSG_TEST_RES msg_test_res = 2;
    case kMsgTestRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *msg_.msg_test_res_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_BASE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:t1.MSG_BASE)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MSG_BASE* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MSG_BASE>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:t1.MSG_BASE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:t1.MSG_BASE)
    UnsafeMergeFrom(*source);
  }
}

void MSG_BASE::MergeFrom(const MSG_BASE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:t1.MSG_BASE)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MSG_BASE::UnsafeMergeFrom(const MSG_BASE& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.msg_case()) {
    case kMsgTest: {
      mutable_msg_test()->::p1::MSG_TEST::MergeFrom(from.msg_test());
      break;
    }
    case kMsgTestRes: {
      mutable_msg_test_res()->::p1::MSG_TEST_RES::MergeFrom(from.msg_test_res());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void MSG_BASE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:t1.MSG_BASE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_BASE::CopyFrom(const MSG_BASE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t1.MSG_BASE)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MSG_BASE::IsInitialized() const {

  return true;
}

void MSG_BASE::Swap(MSG_BASE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MSG_BASE::InternalSwap(MSG_BASE* other) {
  std::swap(msg_, other->msg_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MSG_BASE::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_BASE_descriptor_;
  metadata.reflection = MSG_BASE_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MSG_BASE

// optional .p1.MSG_TEST msg_test = 1;
bool MSG_BASE::has_msg_test() const {
  return msg_case() == kMsgTest;
}
void MSG_BASE::set_has_msg_test() {
  _oneof_case_[0] = kMsgTest;
}
void MSG_BASE::clear_msg_test() {
  if (has_msg_test()) {
    delete msg_.msg_test_;
    clear_has_msg();
  }
}
 const ::p1::MSG_TEST& MSG_BASE::msg_test() const {
  // @@protoc_insertion_point(field_get:t1.MSG_BASE.msg_test)
  return has_msg_test()
      ? *msg_.msg_test_
      : ::p1::MSG_TEST::default_instance();
}
::p1::MSG_TEST* MSG_BASE::mutable_msg_test() {
  if (!has_msg_test()) {
    clear_msg();
    set_has_msg_test();
    msg_.msg_test_ = new ::p1::MSG_TEST;
  }
  // @@protoc_insertion_point(field_mutable:t1.MSG_BASE.msg_test)
  return msg_.msg_test_;
}
::p1::MSG_TEST* MSG_BASE::release_msg_test() {
  // @@protoc_insertion_point(field_release:t1.MSG_BASE.msg_test)
  if (has_msg_test()) {
    clear_has_msg();
    ::p1::MSG_TEST* temp = msg_.msg_test_;
    msg_.msg_test_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MSG_BASE::set_allocated_msg_test(::p1::MSG_TEST* msg_test) {
  clear_msg();
  if (msg_test) {
    set_has_msg_test();
    msg_.msg_test_ = msg_test;
  }
  // @@protoc_insertion_point(field_set_allocated:t1.MSG_BASE.msg_test)
}

// optional .p1.MSG_TEST_RES msg_test_res = 2;
bool MSG_BASE::has_msg_test_res() const {
  return msg_case() == kMsgTestRes;
}
void MSG_BASE::set_has_msg_test_res() {
  _oneof_case_[0] = kMsgTestRes;
}
void MSG_BASE::clear_msg_test_res() {
  if (has_msg_test_res()) {
    delete msg_.msg_test_res_;
    clear_has_msg();
  }
}
 const ::p1::MSG_TEST_RES& MSG_BASE::msg_test_res() const {
  // @@protoc_insertion_point(field_get:t1.MSG_BASE.msg_test_res)
  return has_msg_test_res()
      ? *msg_.msg_test_res_
      : ::p1::MSG_TEST_RES::default_instance();
}
::p1::MSG_TEST_RES* MSG_BASE::mutable_msg_test_res() {
  if (!has_msg_test_res()) {
    clear_msg();
    set_has_msg_test_res();
    msg_.msg_test_res_ = new ::p1::MSG_TEST_RES;
  }
  // @@protoc_insertion_point(field_mutable:t1.MSG_BASE.msg_test_res)
  return msg_.msg_test_res_;
}
::p1::MSG_TEST_RES* MSG_BASE::release_msg_test_res() {
  // @@protoc_insertion_point(field_release:t1.MSG_BASE.msg_test_res)
  if (has_msg_test_res()) {
    clear_has_msg();
    ::p1::MSG_TEST_RES* temp = msg_.msg_test_res_;
    msg_.msg_test_res_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MSG_BASE::set_allocated_msg_test_res(::p1::MSG_TEST_RES* msg_test_res) {
  clear_msg();
  if (msg_test_res) {
    set_has_msg_test_res();
    msg_.msg_test_res_ = msg_test_res;
  }
  // @@protoc_insertion_point(field_set_allocated:t1.MSG_BASE.msg_test_res)
}

bool MSG_BASE::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
void MSG_BASE::clear_has_msg() {
  _oneof_case_[0] = MSG_NOT_SET;
}
MSG_BASE::MsgCase MSG_BASE::msg_case() const {
  return MSG_BASE::MsgCase(_oneof_case_[0]);
}
inline const MSG_BASE* MSG_BASE::internal_default_instance() {
  return &MSG_BASE_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace t1

// @@protoc_insertion_point(global_scope)
